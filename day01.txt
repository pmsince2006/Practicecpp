What is data ?
Data is essentially information—raw facts and figures that, by themselves, might not mean much, but when organized and analyzed, can reveal insights, tell stories, or drive decisions.
Here’s a breakdown:
- In daily life: Your name, your age, your favorite songs on a playlist—those are all forms of data.
- In technology: Every time you visit a website, tap an app, or stream a video, data is being generated—like your device type, location, or preferences.
- In science and business: Data helps scientists track climate change and businesses understand what people want to buy.


What is filesystem ?
A filesystem is like the organizational brain of your storage devices—hard drives, SSDs, USB sticks, or even memory cards. It tells the device how to store, retrieve, and organize your data so that everything isn’t just a chaotic mess of 1s and 0s.
Here’s a simple way to think of it:
- Imagine a bookshelf: The filesystem is like the librarian who decides how books (files) should be sorted, labeled, and found easily when you need them.
- It manages:
- File names and extensions
- Folders and directory structures
- Permissions (who can read, write, or execute a file)
- File locations on disk sectors


What is data modeling ?
Data modeling is the process of designing how data is organized and connected within a system—kind of like creating a blueprint before building a house, but instead of walls and doors, you're mapping out tables, fields, relationships, and rules for handling information.
 Why it's useful:
- Helps developers and analysts understand and communicate how data flows
- Ensures databases are efficient, scalable, and easy to maintain
- Minimizes data redundancy and inconsistency
 Key components:
- Entities: The main objects or concepts (e.g., Students, Courses)
- Attributes: Properties of those entities (e.g., Student Name, Course ID)
- Relationships: How entities are connected (e.g., A student enrolls in courses)


What is database and types of databases ?

What makes up a database?
- **Tables:** Hold data in rows and columns (like a spreadsheet)
- **Records:** Individual rows, representing entries (e.g., a customer's details)
- **Fields:** Columns, representing attributes (e.g., name, email)
- **Queries:** Tools to retrieve specific data
- **Indexes:** Speed up searches, like a book's index

Types of Databases:

| Type                    | Description                                                                 | Example Use Case                             |
|-------------------------|-----------------------------------------------------------------------------|----------------------------------------------|
| **Relational (RDBMS)**  | Uses tables with predefined schemas and relationships via keys              | Banking systems, inventory management        |
| **NoSQL**               | Handles unstructured or semi-structured data; more flexible than RDBMS      | Social media platforms, IoT data             |
| **In-memory**           | Stores data in RAM for ultra-fast access                                    | Real-time analytics, gaming platforms        |
| **Graph**               | Represents data as nodes and relationships (edges)                          | Social networks, recommendation engines      |
| **Time-series**         | Optimized for data indexed by time                                          | Sensor data, stock market tracking           |
| **Object-oriented**     | Stores data as objects (like in OOP languages)                              | Software development environments            |
| **Distributed**         | Spreads data across multiple machines                                       | Global e-commerce systems, cloud services    |
| **Hierarchical**        | Data structured in a tree-like format                                       | Legacy telecom or airline reservation systems|
| **Network**             | Uses complex relationships between data sets with multiple parent-child links | Early database models, certain legacy systems|



